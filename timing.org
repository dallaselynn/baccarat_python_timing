* Fun with Python profiling

** Method 1 - call function X times and subtract end time from start time, just like so:
   #+begin_src python
   start = time.time()
   result = play_games(games)
   end = time.time()
   #+end_src

   This is called the *timediff* method and gives simple execution time.

** Method 1a
   time command
   /usr/bin/time -f "O,%D,%E,%F,%I,%K,%M,%O,%P,%R,%S,%U,%W,%X,%Z,%c,%e,%k,%p,%r,%s,%t,%w" game.py
   D      Average size of the process's unshared data area, in Kilobytes.
   E      Elapsed real (wall clock) time used by the process, in [hours:]minutes:seconds.
   F      Number of major, or I/O-requiring, page faults that occurred while the process was running.  These are faults where the page has actually
   migrated out of primary memory.
   I      Number of file system inputs by the process.
   K      Average total (data+stack+text) memory use of the process, in Kilobytes.
   M      Maximum resident set size of the process during its lifetime, in Kilobytes.
   O      Number of file system outputs by the process.
   P      Percentage of the CPU that this job got.  This is just user + system times divided by the total running time.  It also prints a percentage sign.
   R      Number of minor, or recoverable, page faults.  These are pages that are not valid (so they fault) but which have not yet been claimed by other
   virtual pages.  Thus the data in the page is still valid but the system tables must be updated.
   S      Total number of CPU-seconds used by the system on behalf of the process (in kernel mode), in seconds.
   U      Total number of CPU-seconds that the process used directly (in user mode), in seconds.
   W      Number of times the process was swapped out of main memory.
   X      Average amount of shared text in the process, in Kilobytes.
   Z      System's page size, in bytes.  This is a per-system constant, but varies between systems.
   c      Number of times the process was context-switched involuntarily (because the time slice expired).
   e      Elapsed real (wall clock) time used by the process, in seconds.
   k      Number of signals delivered to the process.
   p      Average unshared stack size of the process, in Kilobytes.
   r      Number of socket messages received by the process.
   s      Number of socket messages sent by the process.
   t      Average resident set size of the process, in Kilobytes.
   w      Number of times that the program was context-switched voluntarily, for instance while waiting for an I/O operation to complete.


** Method 1b - timeit
   Here we use the Python builtin timeit instead to measure performance.

** Method 2 - -m cProfile
** Method 3 - @profile decorator
** Method 3 - kernprof
** Method 4 - memory profile


dallas@dallas-darter:~/repos/baccarat/baccarat$ for i in 1 100 1000 10000 100000 1000000 10000000; do python game.py $i; done
1 games took 0.000442981719971 seconds
{'player': 0, 'bank': 1, 'tie': 0}
100 games took 0.00343298912048 seconds
{'player': 48, 'bank': 39, 'tie': 13}
1000 games took 0.030287027359 seconds
{'player': 455, 'bank': 459, 'tie': 86}
10000 games took 0.289927959442 seconds
{'player': 4506, 'bank': 4596, 'tie': 898}
100000 games took 2.8899230957 seconds
{'player': 45351, 'bank': 45481, 'tie': 9168}
1000000 games took 28.9246180058 seconds
{'player': 452756, 'bank': 455857, 'tie': 91387}


10000000 games took 290.590285063 seconds
{'player': 4529653, 'bank': 4564877, 'tie': dallas@dallas-darter:~/repos/baccarat/baccarat$ for i in 1 100 1000 10000 100000 1000000 10000000; do /usr/bin/time -v python game.py $i; done
{'player': 1, 'bank': 0, 'tie': 0}
	Command being timed: "python game.py 1"
	User time (seconds): 0.00
	System time (seconds): 0.00
	Percent of CPU this job got: 92%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.01
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 9168
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 0
	Minor (reclaiming a frame) page faults: 1021
	Voluntary context switches: 1
	Involuntary context switches: 3
	Swaps: 0
	File system inputs: 0
	File system outputs: 0
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 0
{'player': 43, 'bank': 46, 'tie': 11}
	Command being timed: "python game.py 100"
	User time (seconds): 0.00
	System time (seconds): 0.01
	Percent of CPU this job got: 100%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.01
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 9260
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 0
	Minor (reclaiming a frame) page faults: 1025
	Voluntary context switches: 1
	Involuntary context switches: 3
	Swaps: 0
	File system inputs: 0
	File system outputs: 0
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 0
{'player': 473, 'bank': 435, 'tie': 92}
	Command being timed: "python game.py 1000"
	User time (seconds): 0.04
	System time (seconds): 0.00
	Percent of CPU this job got: 95%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.04
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 9360
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 0
	Minor (reclaiming a frame) page faults: 1022
	Voluntary context switches: 1
	Involuntary context switches: 3
	Swaps: 0
	File system inputs: 0
	File system outputs: 0
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 0
{'player': 4542, 'bank': 4494, 'tie': 964}
	Command being timed: "python game.py 10000"
	User time (seconds): 0.30
	System time (seconds): 0.00
	Percent of CPU this job got: 99%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.30
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 9452
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 0
	Minor (reclaiming a frame) page faults: 1025
	Voluntary context switches: 1
	Involuntary context switches: 3
	Swaps: 0
	File system inputs: 0
	File system outputs: 0
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 0
{'player': 45350, 'bank': 45425, 'tie': 9225}
	Command being timed: "python game.py 100000"
	User time (seconds): 2.92
	System time (seconds): 0.00
	Percent of CPU this job got: 99%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:02.93
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 9296
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 0
	Minor (reclaiming a frame) page faults: 1025
	Voluntary context switches: 1
	Involuntary context switches: 6
	Swaps: 0
	File system inputs: 0
	File system outputs: 0
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 0
{'player': 451845, 'bank': 457601, 'tie': 90554}
	Command being timed: "python game.py 1000000"
	User time (seconds): 29.43
	System time (seconds): 0.00
	Percent of CPU this job got: 99%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:29.44
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 9216
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 0
	Minor (reclaiming a frame) page faults: 1024
	Voluntary context switches: 1
	Involuntary context switches: 15
	Swaps: 0
	File system inputs: 0
	File system outputs: 0
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 0
{'player': 4530262, 'bank': 4560958, 'tie': 908780}
	Command being timed: "python game.py 10000000"
	User time (seconds): 287.87
	System time (seconds): 0.00
	Percent of CPU this job got: 99%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 4:47.97
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 9364
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 0
	Minor (reclaiming a frame) page faults: 1026
	Voluntary context switches: 1
	Involuntary context switches: 82
	Swaps: 0
	File system inputs: 0
	File system outputs: 0
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 0



dallas@dallas-darter:~/repos/baccarat/baccarat$ for i in 1 100 1000 10000 100000 1000000 10000000; do python -m cProfile -s cumulative game.py $i; done
{'player': 1, 'bank': 0, 'tie': 0}
         754 function calls in 0.003 seconds

   Ordered by: cumulative time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    0.003    0.003 game.py:1(<module>)
        1    0.000    0.000    0.003    0.003 random.py:40(<module>)
        1    0.001    0.001    0.001    0.001 hashlib.py:56(<module>)
        1    0.000    0.000    0.001    0.001 random.py:91(__init__)
        1    0.000    0.000    0.001    0.001 random.py:100(seed)
        1    0.000    0.000    0.000    0.000 {function seed at 0x7f9d48a13ed8}
        1    0.000    0.000    0.000    0.000 game.py:260(play_games)
        1    0.000    0.000    0.000    0.000 {posix.urandom}
        1    0.000    0.000    0.000    0.000 game.py:223(__init__)
        1    0.000    0.000    0.000    0.000 game.py:62(__init__)
        1    0.000    0.000    0.000    0.000 game.py:72(shuffle)
        1    0.000    0.000    0.000    0.000 random.py:277(shuffle)
        3    0.000    0.000    0.000    0.000 abc.py:86(__new__)
        1    0.000    0.000    0.000    0.000 game.py:230(play)
        1    0.000    0.000    0.000    0.000 game.py:50(__init__)
        7    0.000    0.000    0.000    0.000 game.py:127(score)
        3    0.000    0.000    0.000    0.000 {isinstance}
        2    0.000    0.000    0.000    0.000 abc.py:128(__instancecheck__)
        1    0.000    0.000    0.000    0.000 game.py:104(__gt__)
        3    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x939500}
       17    0.000    0.000    0.000    0.000 game.py:35(value)
        1    0.000    0.000    0.000    0.000 game.py:209(draws_card)
      415    0.000    0.000    0.000    0.000 {method 'random' of '_random.Random' objects}
        2    0.000    0.000    0.000    0.000 abc.py:148(__subclasscheck__)
       36    0.000    0.000    0.000    0.000 {getattr}
        2    0.000    0.000    0.000    0.000 game.py:120(is_natural)
        6    0.000    0.000    0.000    0.000 hashlib.py:100(__get_openssl_constructor)
       52    0.000    0.000    0.000    0.000 game.py:18(__init__)
        1    0.000    0.000    0.000    0.000 {math.exp}
        4    0.000    0.000    0.000    0.000 abc.py:89(<genexpr>)
        1    0.000    0.000    0.000    0.000 __future__.py:48(<module>)
        1    0.000    0.000    0.000    0.000 game.py:182(draws_card)
        1    0.000    0.000    0.000    0.000 _weakrefset.py:58(__iter__)
        9    0.000    0.000    0.000    0.000 _weakrefset.py:36(__init__)
        2    0.000    0.000    0.000    0.000 {math.log}
        1    0.000    0.000    0.000    0.000 random.py:72(Random)
        1    0.000    0.000    0.000    0.000 {binascii.hexlify}
        6    0.000    0.000    0.000    0.000 game.py:147(add_card)
       58    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 game.py:85(BaccaratHand)
        8    0.000    0.000    0.000    0.000 _weakrefset.py:70(__contains__)
        1    0.000    0.000    0.000    0.000 {method 'union' of 'set' objects}
        1    0.000    0.000    0.000    0.000 game.py:17(Card)
        1    0.000    0.000    0.000    0.000 game.py:206(__init__)
        1    0.000    0.000    0.000    0.000 _weakrefset.py:26(__exit__)
        2    0.000    0.000    0.000    0.000 _weakrefset.py:83(add)
        2    0.000    0.000    0.000    0.000 game.py:92(__init__)
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_md5}
        1    0.000    0.000    0.000    0.000 random.py:655(WichmannHill)
        2    0.000    0.000    0.000    0.000 game.py:158(clear)
        1    0.000    0.000    0.000    0.000 {math.sqrt}
       17    0.000    0.000    0.000    0.000 game.py:31(rank)
        1    0.000    0.000    0.000    0.000 _weakrefset.py:20(__enter__)
        1    0.000    0.000    0.000    0.000 game.py:49(Deck)
        7    0.000    0.000    0.000    0.000 __future__.py:75(__init__)
        1    0.000    0.000    0.000    0.000 game.py:14(InvalidCardError)
        1    0.000    0.000    0.000    0.000 _weakrefset.py:52(_commit_removals)
       11    0.000    0.000    0.000    0.000 {len}
        2    0.000    0.000    0.000    0.000 {method '__subclasshook__' of 'object' objects}
        1    0.000    0.000    0.000    0.000 _weakrefset.py:16(__init__)
        1    0.000    0.000    0.000    0.000 game.py:57(Shoe)
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_sha384}
        3    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_sha224}
        1    0.000    0.000    0.000    0.000 __future__.py:74(_Feature)
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_sha1}
        1    0.000    0.000    0.000    0.000 game.py:179(__init__)
        6    0.000    0.000    0.000    0.000 game.py:75(deal)
        1    0.000    0.000    0.000    0.000 random.py:805(SystemRandom)
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_sha256}
        1    0.000    0.000    0.000    0.000 game.py:174(BankHand)
        3    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
        1    0.000    0.000    0.000    0.000 game.py:216(BaccaratGame)
        1    0.000    0.000    0.000    0.000 game.py:15(InvalidHandError)
        1    0.000    0.000    0.000    0.000 {method 'remove' of 'set' objects}
        1    0.000    0.000    0.000    0.000 game.py:205(PlayerHand)
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_sha512}
        1    0.000    0.000    0.000    0.000 abc.py:15(abstractmethod)
        6    0.000    0.000    0.000    0.000 {method 'pop' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 {method '__subclasses__' of 'type' objects}
        6    0.000    0.000    0.000    0.000 {globals}


{'player': 48, 'bank': 45, 'tie': 7}
         10476 function calls in 0.008 seconds

   Ordered by: cumulative time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    0.008    0.008 game.py:1(<module>)
        1    0.000    0.000    0.005    0.005 game.py:260(play_games)
      100    0.001    0.000    0.005    0.000 game.py:230(play)
      853    0.001    0.000    0.003    0.000 game.py:127(score)
        1    0.000    0.000    0.002    0.002 random.py:40(<module>)
     1882    0.002    0.000    0.002    0.000 game.py:35(value)
        1    0.001    0.001    0.001    0.001 hashlib.py:56(<module>)
      100    0.000    0.000    0.001    0.000 game.py:209(draws_card)
      200    0.000    0.000    0.001    0.000 game.py:120(is_natural)
      100    0.000    0.000    0.001    0.000 game.py:182(draws_card)
      100    0.000    0.000    0.001    0.000 game.py:104(__gt__)
        1    0.000    0.000    0.001    0.001 random.py:91(__init__)
        1    0.000    0.000    0.001    0.001 random.py:100(seed)
       52    0.000    0.000    0.000    0.000 game.py:112(__lt__)
        1    0.000    0.000    0.000    0.000 {function seed at 0x7f0a226b2ed8}
      314    0.000    0.000    0.000    0.000 {isinstance}
      221    0.000    0.000    0.000    0.000 abc.py:128(__instancecheck__)
        2    0.000    0.000    0.000    0.000 game.py:72(shuffle)
        2    0.000    0.000    0.000    0.000 random.py:277(shuffle)
      494    0.000    0.000    0.000    0.000 game.py:147(add_card)
        1    0.000    0.000    0.000    0.000 game.py:223(__init__)
        1    0.000    0.000    0.000    0.000 game.py:62(__init__)
        1    0.000    0.000    0.000    0.000 {posix.urandom}
     1882    0.000    0.000    0.000    0.000 game.py:31(rank)
      494    0.000    0.000    0.000    0.000 game.py:75(deal)
        1    0.000    0.000    0.000    0.000 game.py:78(refill)
      292    0.000    0.000    0.000    0.000 _weakrefset.py:70(__contains__)
        3    0.000    0.000    0.000    0.000 abc.py:86(__new__)
        7    0.000    0.000    0.000    0.000 game.py:96(__eq__)
      546    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
      494    0.000    0.000    0.000    0.000 {method 'pop' of 'list' objects}
        1    0.000    0.000    0.000    0.000 game.py:50(__init__)
      257    0.000    0.000    0.000    0.000 {getattr}
        4    0.000    0.000    0.000    0.000 abc.py:148(__subclasscheck__)
      830    0.000    0.000    0.000    0.000 {method 'random' of '_random.Random' objects}
      877    0.000    0.000    0.000    0.000 {len}
      200    0.000    0.000    0.000    0.000 game.py:158(clear)
        3    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x939500}
        3    0.000    0.000    0.000    0.000 _weakrefset.py:58(__iter__)
       52    0.000    0.000    0.000    0.000 game.py:18(__init__)
        4    0.000    0.000    0.000    0.000 abc.py:89(<genexpr>)
        6    0.000    0.000    0.000    0.000 hashlib.py:100(__get_openssl_constructor)
        1    0.000    0.000    0.000    0.000 __future__.py:48(<module>)
        1    0.000    0.000    0.000    0.000 {math.exp}
        9    0.000    0.000    0.000    0.000 _weakrefset.py:36(__init__)
        3    0.000    0.000    0.000    0.000 _weakrefset.py:26(__exit__)
        2    0.000    0.000    0.000    0.000 {math.log}
        1    0.000    0.000    0.000    0.000 random.py:72(Random)
        4    0.000    0.000    0.000    0.000 _weakrefset.py:83(add)
        1    0.000    0.000    0.000    0.000 game.py:17(Card)
        7    0.000    0.000    0.000    0.000 __future__.py:75(__init__)
        1    0.000    0.000    0.000    0.000 game.py:85(BaccaratHand)
        1    0.000    0.000    0.000    0.000 {binascii.hexlify}
        3    0.000    0.000    0.000    0.000 _weakrefset.py:20(__enter__)
        1    0.000    0.000    0.000    0.000 {method 'union' of 'set' objects}
        1    0.000    0.000    0.000    0.000 game.py:206(__init__)
        7    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
        1    0.000    0.000    0.000    0.000 game.py:216(BaccaratGame)
        1    0.000    0.000    0.000    0.000 game.py:49(Deck)
        1    0.000    0.000    0.000    0.000 game.py:14(InvalidCardError)
        3    0.000    0.000    0.000    0.000 _weakrefset.py:52(_commit_removals)
        3    0.000    0.000    0.000    0.000 _weakrefset.py:16(__init__)
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_md5}
        4    0.000    0.000    0.000    0.000 {method '__subclasshook__' of 'object' objects}
        1    0.000    0.000    0.000    0.000 random.py:655(WichmannHill)
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_sha512}
        1    0.000    0.000    0.000    0.000 game.py:57(Shoe)
        3    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 {math.sqrt}
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_sha224}
        1    0.000    0.000    0.000    0.000 __future__.py:74(_Feature)
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_sha1}
        1    0.000    0.000    0.000    0.000 game.py:179(__init__)
        2    0.000    0.000    0.000    0.000 game.py:92(__init__)
        1    0.000    0.000    0.000    0.000 random.py:805(SystemRandom)
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_sha256}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 game.py:174(BankHand)
        6    0.000    0.000    0.000    0.000 {globals}
        1    0.000    0.000    0.000    0.000 game.py:15(InvalidHandError)
        3    0.000    0.000    0.000    0.000 {method 'remove' of 'set' objects}
        1    0.000    0.000    0.000    0.000 game.py:205(PlayerHand)
        3    0.000    0.000    0.000    0.000 {method '__subclasses__' of 'type' objects}
        1    0.000    0.000    0.000    0.000 abc.py:15(abstractmethod)
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_sha384}


{'player': 446, 'bank': 467, 'tie': 87}
         99885 function calls in 0.049 seconds

   Ordered by: cumulative time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    0.049    0.049 game.py:1(<module>)
        1    0.001    0.001    0.046    0.046 game.py:260(play_games)
     1000    0.005    0.000    0.044    0.000 game.py:230(play)
     8702    0.008    0.000    0.026    0.000 game.py:127(score)
    19164    0.016    0.000    0.018    0.000 game.py:35(value)
     1000    0.001    0.000    0.009    0.000 game.py:209(draws_card)
     2000    0.001    0.000    0.009    0.000 game.py:120(is_natural)
     1000    0.001    0.000    0.009    0.000 game.py:182(draws_card)
     1000    0.001    0.000    0.009    0.000 game.py:104(__gt__)
      554    0.000    0.000    0.005    0.000 game.py:112(__lt__)
     3174    0.001    0.000    0.004    0.000 {isinstance}
     2261    0.002    0.000    0.003    0.000 abc.py:128(__instancecheck__)
     4909    0.002    0.000    0.003    0.000 game.py:147(add_card)
        1    0.000    0.000    0.002    0.002 random.py:40(<module>)
    19164    0.002    0.000    0.002    0.000 game.py:31(rank)
       12    0.000    0.000    0.002    0.000 game.py:72(shuffle)
       12    0.001    0.000    0.002    0.000 random.py:277(shuffle)
     4909    0.001    0.000    0.002    0.000 game.py:75(deal)
       11    0.000    0.000    0.002    0.000 game.py:78(refill)
        1    0.001    0.001    0.001    0.001 hashlib.py:56(<module>)
     2890    0.001    0.000    0.001    0.000 _weakrefset.py:70(__contains__)
       87    0.000    0.000    0.001    0.000 game.py:96(__eq__)
        1    0.000    0.000    0.001    0.001 random.py:91(__init__)
        1    0.000    0.000    0.001    0.001 random.py:100(seed)
     8713    0.001    0.000    0.001    0.000 {len}
     4909    0.000    0.000    0.000    0.000 {method 'pop' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {function seed at 0x7f8998802ed8}
     4961    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
     2000    0.000    0.000    0.000    0.000 game.py:158(clear)
     2297    0.000    0.000    0.000    0.000 {getattr}
     4980    0.000    0.000    0.000    0.000 {method 'random' of '_random.Random' objects}
        1    0.000    0.000    0.000    0.000 game.py:223(__init__)
        1    0.000    0.000    0.000    0.000 game.py:62(__init__)
        1    0.000    0.000    0.000    0.000 {posix.urandom}
        3    0.000    0.000    0.000    0.000 abc.py:86(__new__)
        1    0.000    0.000    0.000    0.000 game.py:50(__init__)
        4    0.000    0.000    0.000    0.000 abc.py:148(__subclasscheck__)
        3    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x939500}
       52    0.000    0.000    0.000    0.000 game.py:18(__init__)
        3    0.000    0.000    0.000    0.000 _weakrefset.py:58(__iter__)
        4    0.000    0.000    0.000    0.000 abc.py:89(<genexpr>)
        1    0.000    0.000    0.000    0.000 __future__.py:48(<module>)
        6    0.000    0.000    0.000    0.000 hashlib.py:100(__get_openssl_constructor)
        1    0.000    0.000    0.000    0.000 {math.exp}
        3    0.000    0.000    0.000    0.000 _weakrefset.py:26(__exit__)
        9    0.000    0.000    0.000    0.000 _weakrefset.py:36(__init__)
        1    0.000    0.000    0.000    0.000 {binascii.hexlify}
        2    0.000    0.000    0.000    0.000 {math.log}
        1    0.000    0.000    0.000    0.000 random.py:72(Random)
        3    0.000    0.000    0.000    0.000 _weakrefset.py:20(__enter__)
        1    0.000    0.000    0.000    0.000 game.py:17(Card)
        1    0.000    0.000    0.000    0.000 game.py:206(__init__)
        1    0.000    0.000    0.000    0.000 game.py:85(BaccaratHand)
        4    0.000    0.000    0.000    0.000 _weakrefset.py:83(add)
        7    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
        1    0.000    0.000    0.000    0.000 {method 'union' of 'set' objects}
        3    0.000    0.000    0.000    0.000 _weakrefset.py:52(_commit_removals)
        1    0.000    0.000    0.000    0.000 game.py:179(__init__)
        2    0.000    0.000    0.000    0.000 game.py:92(__init__)
        3    0.000    0.000    0.000    0.000 {method 'remove' of 'set' objects}
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_md5}
        4    0.000    0.000    0.000    0.000 {method '__subclasshook__' of 'object' objects}
        1    0.000    0.000    0.000    0.000 random.py:655(WichmannHill)
        3    0.000    0.000    0.000    0.000 _weakrefset.py:16(__init__)
        1    0.000    0.000    0.000    0.000 game.py:57(Shoe)
        1    0.000    0.000    0.000    0.000 abc.py:15(abstractmethod)
        3    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 {math.sqrt}
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_sha224}
        1    0.000    0.000    0.000    0.000 __future__.py:74(_Feature)
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_sha1}
        1    0.000    0.000    0.000    0.000 random.py:805(SystemRandom)
        1    0.000    0.000    0.000    0.000 game.py:174(BankHand)
        1    0.000    0.000    0.000    0.000 game.py:216(BaccaratGame)
        1    0.000    0.000    0.000    0.000 game.py:49(Deck)
        7    0.000    0.000    0.000    0.000 __future__.py:75(__init__)
        1    0.000    0.000    0.000    0.000 game.py:14(InvalidCardError)
        1    0.000    0.000    0.000    0.000 game.py:15(InvalidHandError)
        1    0.000    0.000    0.000    0.000 game.py:205(PlayerHand)
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_sha512}
        3    0.000    0.000    0.000    0.000 {method '__subclasses__' of 'type' objects}
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_sha384}
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_sha256}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        6    0.000    0.000    0.000    0.000 {globals}


{'player': 4578, 'bank': 4487, 'tie': 935}
         995499 function calls in 0.458 seconds

   Ordered by: cumulative time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    0.458    0.458 game.py:1(<module>)
        1    0.008    0.008    0.455    0.455 game.py:260(play_games)
    10000    0.048    0.000    0.433    0.000 game.py:230(play)
    86233    0.078    0.000    0.252    0.000 game.py:127(score)
   190032    0.158    0.000    0.175    0.000 game.py:35(value)
    20000    0.013    0.000    0.092    0.000 game.py:120(is_natural)
    10000    0.007    0.000    0.091    0.000 game.py:209(draws_card)
    10000    0.008    0.000    0.089    0.000 game.py:104(__gt__)
    10000    0.012    0.000    0.087    0.000 game.py:182(draws_card)
     5422    0.005    0.000    0.047    0.000 game.py:112(__lt__)
    31870    0.009    0.000    0.036    0.000 {isinstance}
    22805    0.016    0.000    0.027    0.000 abc.py:128(__instancecheck__)
    49488    0.020    0.000    0.026    0.000 game.py:147(add_card)
   190032    0.017    0.000    0.017    0.000 game.py:31(rank)
      119    0.000    0.000    0.017    0.000 game.py:78(refill)
      120    0.000    0.000    0.017    0.000 game.py:72(shuffle)
      120    0.014    0.000    0.017    0.000 random.py:277(shuffle)
    49488    0.011    0.000    0.015    0.000 game.py:75(deal)
      935    0.001    0.000    0.008    0.000 game.py:96(__eq__)
    29262    0.008    0.000    0.008    0.000 _weakrefset.py:70(__contains__)
    87728    0.005    0.000    0.005    0.000 {len}
    49488    0.005    0.000    0.005    0.000 {method 'pop' of 'list' objects}
    20000    0.004    0.000    0.004    0.000 game.py:158(clear)
    49540    0.004    0.000    0.004    0.000 {method 'append' of 'list' objects}
    22841    0.003    0.000    0.003    0.000 {getattr}
    49800    0.002    0.000    0.002    0.000 {method 'random' of '_random.Random' objects}
        1    0.000    0.000    0.002    0.002 random.py:40(<module>)
        1    0.001    0.001    0.001    0.001 hashlib.py:56(<module>)
        1    0.000    0.000    0.001    0.001 random.py:91(__init__)
        1    0.000    0.000    0.001    0.001 random.py:100(seed)
        1    0.000    0.000    0.000    0.000 {function seed at 0x7feee76d2ed8}
        1    0.000    0.000    0.000    0.000 game.py:223(__init__)
        1    0.000    0.000    0.000    0.000 game.py:62(__init__)
        1    0.000    0.000    0.000    0.000 {posix.urandom}
        3    0.000    0.000    0.000    0.000 abc.py:86(__new__)
        1    0.000    0.000    0.000    0.000 game.py:50(__init__)
        4    0.000    0.000    0.000    0.000 abc.py:148(__subclasscheck__)
        3    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x939500}
        3    0.000    0.000    0.000    0.000 _weakrefset.py:58(__iter__)
       52    0.000    0.000    0.000    0.000 game.py:18(__init__)
        4    0.000    0.000    0.000    0.000 abc.py:89(<genexpr>)
        1    0.000    0.000    0.000    0.000 {math.exp}
        6    0.000    0.000    0.000    0.000 hashlib.py:100(__get_openssl_constructor)
        1    0.000    0.000    0.000    0.000 __future__.py:48(<module>)
        9    0.000    0.000    0.000    0.000 _weakrefset.py:36(__init__)
        3    0.000    0.000    0.000    0.000 _weakrefset.py:26(__exit__)
        1    0.000    0.000    0.000    0.000 random.py:72(Random)
        4    0.000    0.000    0.000    0.000 _weakrefset.py:83(add)
        2    0.000    0.000    0.000    0.000 {math.log}
        1    0.000    0.000    0.000    0.000 game.py:85(BaccaratHand)
        2    0.000    0.000    0.000    0.000 game.py:92(__init__)
        1    0.000    0.000    0.000    0.000 game.py:206(__init__)
        1    0.000    0.000    0.000    0.000 {binascii.hexlify}
        3    0.000    0.000    0.000    0.000 _weakrefset.py:20(__enter__)
        1    0.000    0.000    0.000    0.000 {method 'union' of 'set' objects}
        1    0.000    0.000    0.000    0.000 game.py:17(Card)
        7    0.000    0.000    0.000    0.000 __future__.py:75(__init__)
        3    0.000    0.000    0.000    0.000 _weakrefset.py:52(_commit_removals)
        1    0.000    0.000    0.000    0.000 game.py:216(BaccaratGame)
        1    0.000    0.000    0.000    0.000 game.py:49(Deck)
        1    0.000    0.000    0.000    0.000 game.py:14(InvalidCardError)
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_md5}
        4    0.000    0.000    0.000    0.000 {method '__subclasshook__' of 'object' objects}
        1    0.000    0.000    0.000    0.000 random.py:655(WichmannHill)
        1    0.000    0.000    0.000    0.000 game.py:57(Shoe)
        1    0.000    0.000    0.000    0.000 abc.py:15(abstractmethod)
        3    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 {math.sqrt}
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_sha224}
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_sha1}
        1    0.000    0.000    0.000    0.000 game.py:179(__init__)
        1    0.000    0.000    0.000    0.000 random.py:805(SystemRandom)
        6    0.000    0.000    0.000    0.000 {globals}
        7    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
        1    0.000    0.000    0.000    0.000 game.py:15(InvalidHandError)
        3    0.000    0.000    0.000    0.000 {method 'remove' of 'set' objects}
        1    0.000    0.000    0.000    0.000 game.py:205(PlayerHand)
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_sha512}
        3    0.000    0.000    0.000    0.000 {method '__subclasses__' of 'type' objects}
        3    0.000    0.000    0.000    0.000 _weakrefset.py:16(__init__)
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_sha384}
        1    0.000    0.000    0.000    0.000 __future__.py:74(_Feature)
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_sha256}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 game.py:174(BankHand)


{'player': 45290, 'bank': 45625, 'tie': 9085}
         9952313 function calls in 4.498 seconds

   Ordered by: cumulative time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    4.498    4.498 game.py:1(<module>)
        1    0.078    0.078    4.495    4.495 game.py:260(play_games)
   100000    0.473    0.000    4.278    0.000 game.py:230(play)
   864679    0.779    0.000    2.473    0.000 game.py:127(score)
  1905138    1.545    0.000    1.715    0.000 game.py:35(value)
   200000    0.130    0.000    0.900    0.000 game.py:120(is_natural)
   100000    0.065    0.000    0.894    0.000 game.py:209(draws_card)
   100000    0.117    0.000    0.876    0.000 game.py:182(draws_card)
   100000    0.083    0.000    0.868    0.000 game.py:104(__gt__)
    54710    0.044    0.000    0.462    0.000 game.py:112(__lt__)
   318170    0.087    0.000    0.357    0.000 {isinstance}
   227255    0.164    0.000    0.270    0.000 abc.py:128(__instancecheck__)
   493557    0.200    0.000    0.266    0.000 game.py:147(add_card)
  1905138    0.170    0.000    0.170    0.000 game.py:31(rank)
     1195    0.002    0.000    0.165    0.000 game.py:78(refill)
     1196    0.001    0.000    0.162    0.000 game.py:72(shuffle)
     1196    0.138    0.000    0.162    0.000 random.py:277(shuffle)
   493557    0.110    0.000    0.154    0.000 game.py:75(deal)
   290724    0.077    0.000    0.077    0.000 _weakrefset.py:70(__contains__)
     9085    0.008    0.000    0.077    0.000 game.py:96(__eq__)
   875740    0.054    0.000    0.054    0.000 {len}
   493557    0.044    0.000    0.044    0.000 {method 'pop' of 'list' objects}
   493609    0.037    0.000    0.037    0.000 {method 'append' of 'list' objects}
   200000    0.037    0.000    0.037    0.000 game.py:158(clear)
   227291    0.029    0.000    0.029    0.000 {getattr}
   496340    0.024    0.000    0.024    0.000 {method 'random' of '_random.Random' objects}
        1    0.000    0.000    0.002    0.002 random.py:40(<module>)
        1    0.001    0.001    0.001    0.001 hashlib.py:56(<module>)
        1    0.000    0.000    0.001    0.001 random.py:91(__init__)
        1    0.000    0.000    0.001    0.001 random.py:100(seed)
        1    0.000    0.000    0.000    0.000 {function seed at 0x7efff87c0ed8}
        1    0.000    0.000    0.000    0.000 game.py:223(__init__)
        1    0.000    0.000    0.000    0.000 game.py:62(__init__)
        1    0.000    0.000    0.000    0.000 {posix.urandom}
        3    0.000    0.000    0.000    0.000 abc.py:86(__new__)
        1    0.000    0.000    0.000    0.000 game.py:50(__init__)
        4    0.000    0.000    0.000    0.000 abc.py:148(__subclasscheck__)
        3    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x939500}
        3    0.000    0.000    0.000    0.000 _weakrefset.py:58(__iter__)
        1    0.000    0.000    0.000    0.000 {math.exp}
        4    0.000    0.000    0.000    0.000 abc.py:89(<genexpr>)
       52    0.000    0.000    0.000    0.000 game.py:18(__init__)
        1    0.000    0.000    0.000    0.000 __future__.py:48(<module>)
        6    0.000    0.000    0.000    0.000 hashlib.py:100(__get_openssl_constructor)
        2    0.000    0.000    0.000    0.000 {math.log}
        9    0.000    0.000    0.000    0.000 _weakrefset.py:36(__init__)
        3    0.000    0.000    0.000    0.000 _weakrefset.py:26(__exit__)
        1    0.000    0.000    0.000    0.000 random.py:72(Random)
        4    0.000    0.000    0.000    0.000 _weakrefset.py:83(add)
        1    0.000    0.000    0.000    0.000 game.py:206(__init__)
        1    0.000    0.000    0.000    0.000 game.py:17(Card)
        1    0.000    0.000    0.000    0.000 game.py:85(BaccaratHand)
        1    0.000    0.000    0.000    0.000 {binascii.hexlify}
        2    0.000    0.000    0.000    0.000 game.py:92(__init__)
        3    0.000    0.000    0.000    0.000 _weakrefset.py:20(__enter__)
        1    0.000    0.000    0.000    0.000 {method 'union' of 'set' objects}
        1    0.000    0.000    0.000    0.000 random.py:655(WichmannHill)
        1    0.000    0.000    0.000    0.000 {math.sqrt}
        1    0.000    0.000    0.000    0.000 game.py:216(BaccaratGame)
        7    0.000    0.000    0.000    0.000 __future__.py:75(__init__)
        1    0.000    0.000    0.000    0.000 game.py:15(InvalidHandError)
        3    0.000    0.000    0.000    0.000 _weakrefset.py:52(_commit_removals)
        3    0.000    0.000    0.000    0.000 {method 'remove' of 'set' objects}
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_md5}
        1    0.000    0.000    0.000    0.000 game.py:205(PlayerHand)
        3    0.000    0.000    0.000    0.000 _weakrefset.py:16(__init__)
        1    0.000    0.000    0.000    0.000 game.py:57(Shoe)
        1    0.000    0.000    0.000    0.000 abc.py:15(abstractmethod)
        3    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 __future__.py:74(_Feature)
        1    0.000    0.000    0.000    0.000 game.py:179(__init__)
        1    0.000    0.000    0.000    0.000 random.py:805(SystemRandom)
        1    0.000    0.000    0.000    0.000 game.py:174(BankHand)
        6    0.000    0.000    0.000    0.000 {globals}
        7    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
        1    0.000    0.000    0.000    0.000 game.py:49(Deck)
        1    0.000    0.000    0.000    0.000 game.py:14(InvalidCardError)
        4    0.000    0.000    0.000    0.000 {method '__subclasshook__' of 'object' objects}
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_sha512}
        3    0.000    0.000    0.000    0.000 {method '__subclasses__' of 'type' objects}
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_sha384}
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_sha224}
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_sha1}
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_sha256}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}


{'player': 452473, 'bank': 456485, 'tie': 91042}
         99522844 function calls in 45.236 seconds

   Ordered by: cumulative time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000   45.236   45.236 game.py:1(<module>)
        1    0.749    0.749   45.233   45.233 game.py:260(play_games)
  1000000    4.751    0.000   43.128    0.000 game.py:230(play)
  8643752    7.882    0.000   25.092    0.000 game.py:127(score)
 19046408   15.693    0.000   17.425    0.000 game.py:35(value)
  2000000    1.312    0.000    9.087    0.000 game.py:120(is_natural)
  1000000    0.664    0.000    9.054    0.000 game.py:209(draws_card)
  1000000    1.183    0.000    8.851    0.000 game.py:182(draws_card)
  1000000    0.818    0.000    8.788    0.000 game.py:104(__gt__)
   547527    0.451    0.000    4.701    0.000 game.py:112(__lt__)
  3182084    0.862    0.000    3.553    0.000 {isinstance}
  2273126    1.619    0.000    2.691    0.000 abc.py:128(__instancecheck__)
  4938145    1.948    0.000    2.587    0.000 game.py:147(add_card)
 19046408    1.732    0.000    1.732    0.000 game.py:31(rank)
    11955    0.023    0.000    1.654    0.000 game.py:78(refill)
    11956    0.009    0.000    1.630    0.000 game.py:72(shuffle)
    11956    1.372    0.000    1.621    0.000 random.py:277(shuffle)
  4938145    1.085    0.000    1.521    0.000 game.py:75(deal)
  2907692    0.807    0.000    0.807    0.000 _weakrefset.py:70(__contains__)
    91042    0.077    0.000    0.785    0.000 game.py:96(__eq__)
  8761228    0.535    0.000    0.535    0.000 {len}
  4938145    0.437    0.000    0.437    0.000 {method 'pop' of 'list' objects}
  2000000    0.362    0.000    0.362    0.000 game.py:158(clear)
  4938197    0.350    0.000    0.350    0.000 {method 'append' of 'list' objects}
  2273162    0.265    0.000    0.265    0.000 {getattr}
  4961740    0.249    0.000    0.249    0.000 {method 'random' of '_random.Random' objects}
        1    0.000    0.000    0.002    0.002 random.py:40(<module>)
        1    0.001    0.001    0.001    0.001 hashlib.py:56(<module>)
        1    0.000    0.000    0.001    0.001 random.py:91(__init__)
        1    0.000    0.000    0.001    0.001 random.py:100(seed)
        1    0.000    0.000    0.000    0.000 {function seed at 0x7fd8384ebed8}
        1    0.000    0.000    0.000    0.000 game.py:223(__init__)
        1    0.000    0.000    0.000    0.000 game.py:62(__init__)
        1    0.000    0.000    0.000    0.000 {posix.urandom}
        3    0.000    0.000    0.000    0.000 abc.py:86(__new__)
        1    0.000    0.000    0.000    0.000 game.py:50(__init__)
        4    0.000    0.000    0.000    0.000 abc.py:148(__subclasscheck__)
        3    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x939500}
        3    0.000    0.000    0.000    0.000 _weakrefset.py:58(__iter__)
       52    0.000    0.000    0.000    0.000 game.py:18(__init__)
        4    0.000    0.000    0.000    0.000 abc.py:89(<genexpr>)
        1    0.000    0.000    0.000    0.000 {math.exp}
        6    0.000    0.000    0.000    0.000 hashlib.py:100(__get_openssl_constructor)
        1    0.000    0.000    0.000    0.000 __future__.py:48(<module>)
        2    0.000    0.000    0.000    0.000 {math.log}
        9    0.000    0.000    0.000    0.000 _weakrefset.py:36(__init__)
        3    0.000    0.000    0.000    0.000 _weakrefset.py:26(__exit__)
        4    0.000    0.000    0.000    0.000 _weakrefset.py:83(add)
        1    0.000    0.000    0.000    0.000 random.py:72(Random)
        3    0.000    0.000    0.000    0.000 _weakrefset.py:20(__enter__)
        1    0.000    0.000    0.000    0.000 game.py:85(BaccaratHand)
        1    0.000    0.000    0.000    0.000 {binascii.hexlify}
        1    0.000    0.000    0.000    0.000 {method 'union' of 'set' objects}
        1    0.000    0.000    0.000    0.000 game.py:17(Card)
        1    0.000    0.000    0.000    0.000 game.py:206(__init__)
        4    0.000    0.000    0.000    0.000 {method '__subclasshook__' of 'object' objects}
        3    0.000    0.000    0.000    0.000 _weakrefset.py:16(__init__)
        1    0.000    0.000    0.000    0.000 game.py:216(BaccaratGame)
        1    0.000    0.000    0.000    0.000 game.py:49(Deck)
        3    0.000    0.000    0.000    0.000 _weakrefset.py:52(_commit_removals)
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_md5}
        1    0.000    0.000    0.000    0.000 random.py:655(WichmannHill)
        1    0.000    0.000    0.000    0.000 game.py:57(Shoe)
        1    0.000    0.000    0.000    0.000 abc.py:15(abstractmethod)
        1    0.000    0.000    0.000    0.000 {math.sqrt}
        1    0.000    0.000    0.000    0.000 __future__.py:74(_Feature)
        1    0.000    0.000    0.000    0.000 game.py:179(__init__)
        2    0.000    0.000    0.000    0.000 game.py:92(__init__)
        1    0.000    0.000    0.000    0.000 random.py:805(SystemRandom)
        1    0.000    0.000    0.000    0.000 game.py:174(BankHand)
        6    0.000    0.000    0.000    0.000 {globals}
        7    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
        7    0.000    0.000    0.000    0.000 __future__.py:75(__init__)
        1    0.000    0.000    0.000    0.000 game.py:14(InvalidCardError)
        1    0.000    0.000    0.000    0.000 game.py:15(InvalidHandError)
        3    0.000    0.000    0.000    0.000 {method 'remove' of 'set' objects}
        1    0.000    0.000    0.000    0.000 game.py:205(PlayerHand)
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_sha512}
        3    0.000    0.000    0.000    0.000 {method '__subclasses__' of 'type' objects}
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_sha384}
        3    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_sha224}
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_sha1}
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_sha256}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}


     
{'player': 4524172, 'bank': 4568104, 'tie': 907724}
         995258850 function calls in 452.239 seconds

   Ordered by: cumulative time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000  452.239  452.239 game.py:1(<module>)
        1    8.009    8.009  452.236  452.236 game.py:260(play_games)
 10000000   48.062    0.000  430.296    0.000 game.py:230(play)
 86441722   78.078    0.000  247.941    0.000 game.py:127(score)
190490405  154.561    0.000  172.030    0.000 game.py:35(value)
 20000000   13.185    0.000   90.278    0.000 game.py:120(is_natural)
 10000000    6.678    0.000   89.967    0.000 game.py:209(draws_card)
 10000000   12.035    0.000   87.807    0.000 game.py:182(draws_card)
 10000000    8.234    0.000   87.060    0.000 game.py:104(__gt__)
  5475828    4.526    0.000   46.497    0.000 game.py:112(__lt__)
 31815448    8.744    0.000   35.775    0.000 {isinstance}
 22723172   16.710    0.000   27.031    0.000 abc.py:128(__instancecheck__)
 49384727   20.045    0.000   26.570    0.000 game.py:147(add_card)
190490405   17.469    0.000   17.469    0.000 game.py:31(rank)
   119564    0.235    0.000   16.621    0.000 game.py:78(refill)
   119565    0.087    0.000   16.386    0.000 game.py:72(shuffle)
   119565   13.857    0.000   16.299    0.000 random.py:277(shuffle)
 49384727   11.123    0.000   15.582    0.000 game.py:75(deal)
   907724    0.775    0.000    7.734    0.000 game.py:96(__eq__)
 29062801    7.596    0.000    7.596    0.000 _weakrefset.py:70(__contains__)
 87610832    5.254    0.000    5.254    0.000 {len}
 49384727    4.459    0.000    4.459    0.000 {method 'pop' of 'list' objects}
 49384779    3.687    0.000    3.687    0.000 {method 'append' of 'list' objects}
 20000000    3.673    0.000    3.673    0.000 game.py:158(clear)
 22723208    2.724    0.000    2.724    0.000 {getattr}
 49619475    2.431    0.000    2.431    0.000 {method 'random' of '_random.Random' objects}
        1    0.000    0.000    0.002    0.002 random.py:40(<module>)
        1    0.001    0.001    0.001    0.001 hashlib.py:56(<module>)
        1    0.000    0.000    0.001    0.001 random.py:91(__init__)
        1    0.000    0.000    0.001    0.001 random.py:100(seed)
        1    0.000    0.000    0.000    0.000 {function seed at 0x7fc4beb0fed8}
        1    0.000    0.000    0.000    0.000 game.py:223(__init__)
        1    0.000    0.000    0.000    0.000 game.py:62(__init__)
        1    0.000    0.000    0.000    0.000 {posix.urandom}
        3    0.000    0.000    0.000    0.000 abc.py:86(__new__)
        1    0.000    0.000    0.000    0.000 game.py:50(__init__)
        4    0.000    0.000    0.000    0.000 abc.py:148(__subclasscheck__)
        3    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x939500}
        3    0.000    0.000    0.000    0.000 _weakrefset.py:58(__iter__)
        1    0.000    0.000    0.000    0.000 {math.exp}
        4    0.000    0.000    0.000    0.000 abc.py:89(<genexpr>)
        6    0.000    0.000    0.000    0.000 hashlib.py:100(__get_openssl_constructor)
       52    0.000    0.000    0.000    0.000 game.py:18(__init__)
        1    0.000    0.000    0.000    0.000 __future__.py:48(<module>)
        9    0.000    0.000    0.000    0.000 _weakrefset.py:36(__init__)
        3    0.000    0.000    0.000    0.000 _weakrefset.py:26(__exit__)
        1    0.000    0.000    0.000    0.000 random.py:72(Random)
        4    0.000    0.000    0.000    0.000 _weakrefset.py:83(add)
        1    0.000    0.000    0.000    0.000 game.py:85(BaccaratHand)
        2    0.000    0.000    0.000    0.000 {math.log}
        1    0.000    0.000    0.000    0.000 game.py:17(Card)
        7    0.000    0.000    0.000    0.000 __future__.py:75(__init__)
        3    0.000    0.000    0.000    0.000 _weakrefset.py:52(_commit_removals)
        1    0.000    0.000    0.000    0.000 game.py:206(__init__)
        1    0.000    0.000    0.000    0.000 {binascii.hexlify}
        2    0.000    0.000    0.000    0.000 game.py:92(__init__)
        3    0.000    0.000    0.000    0.000 _weakrefset.py:20(__enter__)
        7    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
        1    0.000    0.000    0.000    0.000 {method 'union' of 'set' objects}
        1    0.000    0.000    0.000    0.000 game.py:49(Deck)
        1    0.000    0.000    0.000    0.000 game.py:14(InvalidCardError)
        3    0.000    0.000    0.000    0.000 {method 'remove' of 'set' objects}
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_md5}
        4    0.000    0.000    0.000    0.000 {method '__subclasshook__' of 'object' objects}
        1    0.000    0.000    0.000    0.000 random.py:655(WichmannHill)
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_sha512}
        1    0.000    0.000    0.000    0.000 game.py:57(Shoe)
        1    0.000    0.000    0.000    0.000 abc.py:15(abstractmethod)
        1    0.000    0.000    0.000    0.000 {math.sqrt}
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_sha224}
        1    0.000    0.000    0.000    0.000 __future__.py:74(_Feature)
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_sha1}
        1    0.000    0.000    0.000    0.000 game.py:179(__init__)
        1    0.000    0.000    0.000    0.000 game.py:15(InvalidHandError)
        1    0.000    0.000    0.000    0.000 game.py:216(BaccaratGame)
        3    0.000    0.000    0.000    0.000 _weakrefset.py:16(__init__)
        1    0.000    0.000    0.000    0.000 game.py:205(PlayerHand)
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_sha384}
        3    0.000    0.000    0.000    0.000 {method '__subclasses__' of 'type' objects}
        3    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 random.py:805(SystemRandom)
        1    0.000    0.000    0.000    0.000 {_hashlib.openssl_sha256}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 game.py:174(BankHand)
        6    0.000    0.000    0.000    0.000 {globals}



(baccarat_env)dallas@dallas-darter:~/repos/baccarat_env/baccarat/baccarat$ kernprof -l -v game.py 10000 game.py.lprof.10000
{'player': 4511, 'bank': 4596, 'tie': 893}
Wrote profile results to game.py.lprof
Timer unit: 1e-06 s

Total time: 0.661982 s
File: game.py
Function: play at line 230

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   230                                               @profile
   231                                               def play(self):
   232                                                   '''
   233                                                   play a game of baccarat through completion
   234                                                   '''
   235                                           
   236     10000         4716      0.5      0.7          if len(self.shoe.cards) < 6:
   237       119        31932    268.3      4.8              self.shoe.refill()
   238                                           
   239     10000         8573      0.9      1.3          self.player_hand.clear()
   240     10000         7567      0.8      1.1          self.bank_hand.clear()
   241                                           
   242     10000        17690      1.8      2.7          self.player_hand.add_card(self.shoe.deal())
   243     10000        14830      1.5      2.2          self.bank_hand.add_card(self.shoe.deal())
   244     10000        13945      1.4      2.1          self.player_hand.add_card(self.shoe.deal())
   245     10000        14014      1.4      2.1          self.bank_hand.add_card(self.shoe.deal())
   246                                           
   247     10000       147283     14.7     22.2          if self.player_hand.draws_card(self.bank_hand):
   248      4985         7993      1.6      1.2              self.player_hand.add_card(self.shoe.deal())
   249                                           
   250     10000       149811     15.0     22.6          if self.bank_hand.draws_card(self.player_hand):
   251      4295         6684      1.6      1.0              self.bank_hand.add_card(self.shoe.deal())
   252                                           
   253     10000       142698     14.3     21.6          if self.player_hand > self.bank_hand:
   254      4511         2037      0.5      0.3              self.winner = self.player_hand
   255      5489        76740     14.0     11.6          elif self.player_hand < self.bank_hand:
   256      4596         2426      0.5      0.4              self.winner = self.bank_hand
   257       893        12608     14.1      1.9          elif self.player_hand == self.bank_hand:
   258       893          435      0.5      0.1              self.winner = None

Total time: 0.764352 s
File: game.py
Function: play_games at line 261

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   261                                           @profile
   262                                           def play_games(number_of_games):
   263         1            1      1.0      0.0      results = {'bank': 0, 'player': 0, 'tie': 0}
   264         1          336    336.0      0.0      g = BaccaratGame()
   265                                           
   266     10001         3191      0.3      0.4      while number_of_games > 0:
   267     10000       720287     72.0     94.2          g.play()
   268     10000        26227      2.6      3.4          if isinstance(g.winner, BankHand):
   269      4596         2105      0.5      0.3              results['bank'] += 1
   270      5404         5761      1.1      0.8          elif isinstance(g.winner, PlayerHand):
   271      4511         2116      0.5      0.3              results['player'] += 1
   272       893          356      0.4      0.0          elif g.winner is None:
   273       893          449      0.5      0.1              results['tie'] += 1
   274                                                   else:
   275                                                       print 'wtf?!!?'
   276     10000         3523      0.4      0.5          number_of_games -= 1
   277                                           
   278         1            0      0.0      0.0      return results




(baccarat_env)dallas@dallas-darter:~/repos/baccarat_env/baccarat/baccarat$ python -m memory_profiler game.py 10000
game.py:68: UserWarning: psutil module not found. memory_profiler will be slow
  











{'player': 4557, 'bank': 4559, 'tie': 884}
Filename: game.py

Line #    Mem usage    Increment   Line Contents
================================================
   261   11.926 MiB   -0.125 MiB   @profile
   262                             def play_games(number_of_games):
   263   11.988 MiB    0.062 MiB       results = {'bank': 0, 'player': 0, 'tie': 0}
   264   12.051 MiB    0.062 MiB       g = BaccaratGame()
   265                             
   266   12.051 MiB    0.000 MiB       while number_of_games > 0:
   267                                     g.play()
   268   12.051 MiB    0.000 MiB           if isinstance(g.winner, BankHand):
   269   12.051 MiB    0.000 MiB               results['bank'] += 1
   270   12.051 MiB    0.000 MiB           elif isinstance(g.winner, PlayerHand):
   271   12.051 MiB    0.000 MiB               results['player'] += 1
   272   12.051 MiB    0.000 MiB           elif g.winner is None:
   273   12.051 MiB    0.000 MiB               results['tie'] += 1
   274                                     else:
   275                                         print 'wtf?!!?'
   276   12.051 MiB    0.000 MiB           number_of_games -= 1
   277                             
   278   12.051 MiB    0.000 MiB       return results


Filename: game.py

Line #    Mem usage    Increment   Line Contents
================================================
   230   12.051 MiB    0.000 MiB       @profile
   231                                 def play(self):
   232                                     '''
   233                                     play a game of baccarat through completion
   234                                     '''
   235                             
   236   12.051 MiB    0.000 MiB           if len(self.shoe.cards) < 6:
   237   12.051 MiB    0.000 MiB               self.shoe.refill()
   238                             
   239   12.051 MiB    0.000 MiB           self.player_hand.clear()
   240   12.051 MiB    0.000 MiB           self.bank_hand.clear()
   241                             
   242   12.051 MiB    0.000 MiB           self.player_hand.add_card(self.shoe.deal())
   243   12.051 MiB    0.000 MiB           self.bank_hand.add_card(self.shoe.deal())
   244   12.051 MiB    0.000 MiB           self.player_hand.add_card(self.shoe.deal())
   245   12.051 MiB    0.000 MiB           self.bank_hand.add_card(self.shoe.deal())
   246                             
   247   12.051 MiB    0.000 MiB           if self.player_hand.draws_card(self.bank_hand):
   248   12.051 MiB    0.000 MiB               self.player_hand.add_card(self.shoe.deal())
   249                             
   250   12.051 MiB    0.000 MiB           if self.bank_hand.draws_card(self.player_hand):
   251   12.051 MiB    0.000 MiB               self.bank_hand.add_card(self.shoe.deal())
   252                             
   253   12.051 MiB    0.000 MiB           if self.player_hand > self.bank_hand:
   254   12.051 MiB    0.000 MiB               self.winner = self.player_hand
   255   12.051 MiB    0.000 MiB           elif self.player_hand < self.bank_hand:
   256   12.051 MiB    0.000 MiB               self.winner = self.bank_hand
   257   12.051 MiB    0.000 MiB           elif self.player_hand == self.bank_hand:
   258   12.051 MiB    0.000 MiB               self.winner = None

** Other Interpreters
*** CYTHON:
 cp file.py file.pyx
 pip install cython
 modify setup.py
 python setup.py build_ext --inplace
 creates baccarat.so which is importable normally
 from baccarat import method

*** PYPY:
    install and run
    pypy game.py 10000

*** Pyston
    install and run
    pyston game.py 10000
